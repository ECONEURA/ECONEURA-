name: cockpit-ci

on:
  push:
    paths:
      - ".dev/cockpit/**"
  pull_request:
    paths:
      - ".dev/cockpit/**"
  schedule:
    - cron: "0 3 * * *" # nightly checks at 03:00 UTC
  workflow_dispatch: {}
concurrency:
  group: cockpit-ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Display Node & npm
        run: |
          node --version
          npm --version

      - name: Install pnpm
        run: npm i -g pnpm@8.15.5

      - name: Cache pnpm store for cockpit
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-cockpit-pnpm-${{ hashFiles('.dev/cockpit/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cockpit-pnpm-

      - name: Install (dev dependencies included)
        run: |
          if [ -f ./.dev/cockpit/pnpm-lock.yaml ]; then
            pnpm install --workspace-root=false --dir ./.dev/cockpit --frozen-lockfile
          else
            (cd ./.dev/cockpit && npm ci --no-audit --no-fund)
          fi

      - name: Build
        run: pnpm --filter ./.dev/cockpit run build
        working-directory: ./.dev/cockpit

  test-cockpit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install pnpm
        run: npm i -g pnpm@8.15.5

      - name: Cache pnpm store for cockpit
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-cockpit-pnpm-${{ hashFiles('.dev/cockpit/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cockpit-pnpm-

      - name: Install (dev dependencies included)
        run: |
          if [ -f ./.dev/cockpit/pnpm-lock.yaml ]; then
            pnpm install --workspace-root=false --dir ./.dev/cockpit --frozen-lockfile
          else
            (cd ./.dev/cockpit && npm ci --no-audit --no-fund)
          fi

      - name: Run vitest (CI)
        run: |
          set -e
          cd ./.dev/cockpit
          npx vitest run --reporter=dot --run || true

      - name: Upload vitest reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cockpit-vitest-report
          path: |
            ./.dev/cockpit/reports
            ./.dev/cockpit/test-results
            ./.dev/cockpit/vitest-report
