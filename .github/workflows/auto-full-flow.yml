name: Auto full Fase D→E→F (non-interactive)

on:
  push:
    branches: [ "fix/azure-ci-20251006171711" ]

permissions:
  contents: read
  issues: write
  actions: read

jobs:
  full-flow:
    runs-on: ubuntu-latest
    env:
      SUBSCRIPTION_ID: 'fc22ced4-6dc1-4f52-aac1-170a62f98c57'
      RG: 'appsvc_linux_northeurope_basic'
      LOCATION: 'northeurope'
      PLAN: 'appsvc_linux_northeurope_basic'
      WEBAPP: 'econeura-web-dev'
      APIAPP: 'econeura-api-dev'
      NODE_FX: 'NODE|20-lts'
      PORT: '3000'
      AZURE_APP_NAME_WEB: 'econeura-web-dev'
      AZURE_APP_NAME_API: 'econeura-api-dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set subscription
        run: |
          az account show --query "{user:user.name,subscription:id}" -o table || true
          az account set --subscription "$SUBSCRIPTION_ID"

      - name: Provision resources (idempotent)
        run: |
          set -euo pipefail
          az group create -n "$RG" -l "$LOCATION" --output table
          if ! az appservice plan show -g "$RG" -n "$PLAN" --output table >/dev/null 2>&1; then
            az appservice plan create -g "$RG" -n "$PLAN" --sku B1 --is-linux --output table
          fi
          if ! az webapp show -g "$RG" -n "$WEBAPP" -o json >/dev/null 2>&1; then
            az webapp create -g "$RG" -p "$PLAN" -n "$WEBAPP" --runtime "$NODE_FX" -o table
          fi
          if ! az webapp show -g "$RG" -n "$APIAPP" -o json >/dev/null 2>&1; then
            az webapp create -g "$RG" -p "$PLAN" -n "$APIAPP" --runtime "$NODE_FX" -o table
          fi
          az webapp config set -g "$RG" -n "$WEBAPP" --always-on true -o table || true
          az webapp config set -g "$RG" -n "$WEBAPP" --set siteConfig.linuxFxVersion="$NODE_FX" -o table || true
          az webapp config appsettings set -g "$RG" -n "$WEBAPP" --settings WEBSITE_NODE_DEFAULT_VERSION="20-lts" WEBSITES_PORT="$PORT" VITE_AI_ENDPOINT="https://$APIAPP.azurewebsites.net/api/ai" -o table || true
          az webapp config set -g "$RG" -n "$APIAPP" --always-on true -o table || true
          az webapp config set -g "$RG" -n "$APIAPP" --set siteConfig.linuxFxVersion="$NODE_FX" -o table || true
          az webapp config appsettings set -g "$RG" -n "$APIAPP" --settings WEBSITE_NODE_DEFAULT_VERSION="20-lts" WEBSITES_PORT="$PORT" ALLOWED_ORIGIN="https://$WEBAPP.azurewebsites.net,http://localhost:5173" -o table || true

      - name: Build Web
        working-directory: apps/web
        run: |
          set -euo pipefail
          npm ci
          VITE_AI_ENDPOINT="https://$APIAPP.azurewebsites.net/api/ai" npm run build
          if [ ! -f server.js ]; then echo "server.js missing"; exit 2; fi
          cd dist && zip -r ../web-artifact.zip .

      - name: Deploy Web using az
        run: |
          set -euo pipefail
          WEB_ZIP=apps/web/web-artifact.zip
          az webapp deploy --resource-group "$RG" --name "$WEBAPP" --src-path "$WEB_ZIP" || az webapp deployment source config-zip -g "$RG" -n "$WEBAPP" --src "$WEB_ZIP"

      - name: Build API
        working-directory: services/api
        run: |
          set -euo pipefail
          npm ci || true
          zip -r ../api-artifact.zip .

      - name: Deploy API using az
        run: |
          set -euo pipefail
          API_ZIP=services/api/../api-artifact.zip
          az webapp deploy --resource-group "$RG" --name "$APIAPP" --src-path "$API_ZIP" || az webapp deployment source config-zip -g "$RG" -n "$APIAPP" --src "$API_ZIP"

      - name: Run smoke tests
        run: |
          set -euo pipefail
          WEB_HOST="$WEBAPP.azurewebsites.net"
          API_HOST="$APIAPP.azurewebsites.net"
          echo "Checking API health: https://$API_HOST/api/ai/health"
          curl -fsS https://$API_HOST/api/ai/health -o /tmp/api-health.json || (echo "API health failed"; cat /tmp/api-health.json || true; exit 2)
          echo "Checking Web root: https://$WEB_HOST"
          curl -fsSI https://$WEB_HOST | head -n 5 || (echo "Web check failed"; exit 3)
          echo "Smoke checks passed"

      - name: Report completion (open issue)
        env:
          REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEB_APP: ${{ env.WEBAPP }}
          API_APP: ${{ env.APIAPP }}
        run: |
          set -euo pipefail
          BODY=$(cat <<EOF
Fase D→E→F automática completada.

- Provision: resource group $RG, web=$WEB_APP, api=$API_APP
- Deploy: web and api desplegados
- Smoke tests: PASS

Revisa Actions runs para logs completos.
EOF
)
          API="https://api.github.com/repos/$REPO/issues"
          PAYLOAD=$(jq -nc --arg title "[Fase D→F] Auto run summary" --arg body "$BODY" '{title:$title, body:$body}')
          curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -d "$PAYLOAD" "$API" > /tmp/issue.json || true
          jq -r '.html_url' /tmp/issue.json || true
