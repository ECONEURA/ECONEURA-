name: Dispatch Azure provision using stored PAT

on:
  push:
    branches: ["fix/**", "main"]
  workflow_dispatch: {}

jobs:
  dispatch-and-wait:
    runs-on: ubuntu-latest
    steps:
      - name: Debug info
        run: |
          echo "Running on: $(hostname)"; echo "Runner: $RUNNER_OS"; echo "Commit: $GITHUB_SHA"

      - name: Dispatch azure-provision.yml via PAT
        env:
          PAT: ${{ secrets.WORKFLOW_DISPATCH_PAT }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          API_URL="https://api.github.com/repos/$REPO/actions/workflows/azure-provision.yml/dispatches"
          PAYLOAD=$(jq -n '{ref: "fix/azure-ci-20251006171711", inputs: { subscription_id: "fc22ced4-6dc1-4f52-aac1-170a62f98c57", resource_group: "appsvc_linux_northeurope_basic", location: "northeurope", plan: "appsvc_linux_northeurope_basic", webapp: "econeura-web-dev", apiapp: "econeura-api-dev", node_fx: "NODE|20-lts", port: "3000" }}')
          echo "Dispatch payload: $PAYLOAD"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")
          echo "Dispatch HTTP status: $HTTP_STATUS"
          if [ "$HTTP_STATUS" -ne 204 ]; then echo "Dispatch failed (HTTP $HTTP_STATUS)"; exit 2; fi
          echo "Dispatch accepted (204)"

      - name: Wait for azure-provision run to appear
        env:
          PAT: ${{ secrets.WORKFLOW_DISPATCH_PAT }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          START_TS=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "Looking for run started after $START_TS"
          RUN_ID=0
          for i in {1..60}; do
            sleep 5
            # list latest runs and find one created after START_TS
            RUN_ID=$(curl -sS -H "Authorization: Bearer $PAT" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/actions/workflows/azure-provision.yml/runs?per_page=10" | jq -r ".workflow_runs[] | select(.created_at >= \"$START_TS\") | .id" | head -n1 || true)
            if [ -n "$RUN_ID" ]; then echo "Found run: $RUN_ID"; break; fi
          done
          if [ -z "$RUN_ID" ]; then echo "No run detected within timeout"; exit 3; fi
          echo "Monitoring run $RUN_ID until completed..."
          while true; do
            sleep 8
            STATUS=$(curl -sS -H "Authorization: Bearer $PAT" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID" | jq -r '.status')
            CONCL=$(curl -sS -H "Authorization: Bearer $PAT" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID" | jq -r '.conclusion')
            echo "[$(date +%T)] status=$STATUS conclusion=$CONCL"
            if [ "$STATUS" = "completed" ]; then echo "Run $RUN_ID completed with conclusion=$CONCL"; break; fi
          done
          # list jobs and artifacts
          echo "Jobs for run $RUN_ID:"; curl -sS -H "Authorization: Bearer $PAT" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/jobs" | jq -r '.jobs[] | {id:.id, name:.name, status:.status, conclusion:.conclusion}' || true
          echo "Artifacts for run $RUN_ID:"; curl -sS -H "Authorization: Bearer $PAT" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/artifacts" | jq -r '.artifacts[] | {id:.id, name:.name, size_in_bytes:.size_in_bytes, url:.archive_download_url}' || true

      - name: Done
        run: echo "Dispatch + monitor workflow finished (see logs above). If azure provision succeeded, provision-postprocess should run automatically."
