name: Coverage Gate (staging)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  coverage-report:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "8.15.5"

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Run serial coverage (non-blocking)
        env:
          CI: true
        run: |
          node ./scripts/ensure-coverage-tmp.js || true
          pnpm -w run test:coverage:ci || true
          node ./scripts/merge_v8_fragments.js || true

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-staging
          path: |
            coverage/**
            packages/*/reports/**/*.json

      - name: Comment PR with coverage summary
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.AUTOMATION_PAT || secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const p = 'coverage/coverage-summary.json';
            let body = 'Coverage (staging):';
            if (fs.existsSync(p)) {
              const s = JSON.parse(fs.readFileSync(p, 'utf8'));
              body += `\n- statements: ${s.total.statements.pct}%\n- branches: ${s.total.branches.pct}%\n- functions: ${s.total.functions.pct}%\n- lines: ${s.total.lines.pct}%`;
            } else {
              body += '\n- coverage summary not found (tests may have failed)';
            }
            const pr = github.context.payload.pull_request;
            if (pr && pr.number) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body
              });
            }
