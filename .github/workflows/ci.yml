name: ci
on:
  push: { branches: [ main ] }
  pull_request:
permissions: { contents: read, checks: write }
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
env:
  DEPLOY_ENABLED: "false"

jobs:
  build_test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Ensure agent-routing.json (10 NEURA)
        run: |
          python3 - <<'PY'
          import json, os
          p="packages/config/agent-routing.json"
          os.makedirs(os.path.dirname(p), exist_ok=True)
          want=[{"id":f"neura-{i}","url":f"http://localhost:4310/hook/neura-{i}","auth":"header","keyEnv":"MAKE_TOKEN"} for i in range(1,11)]
          try:
            d=json.load(open(p)); ok=isinstance(d,list) and len(d)==10 and sorted(x["id"] for x in d)==[f"neura-{i}" for i in range(1,11)] and all(set(r)=={"id","url","auth","keyEnv"} for r in d)
          except: ok=False
          open(p,"w").write(json.dumps(d if ok else want,indent=2))
          PY
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: 20.18.0, cache: pnpm }
      - run: corepack enable && pnpm i --frozen-lockfile=false
      - run: pnpm test --coverage --coverage.provider=v8 --coverage.reporter=json-summary || true
      - name: Enforce coverage >=80% (si existe)
        run: |
          node -e "const p='./coverage/coverage-summary.json',fs=require('fs');if(fs.existsSync(p)){const pct=require(p).total.lines.pct;console.log('coverage %:',pct);if(pct<80)process.exit(1)}"
      - run: pnpm -C apps/web build || true
      - run: echo "ci,build,${GITHUB_SHA},$(date -u +%FT%TZ)" >> WF_EVIDENCE.csv
      - uses: actions/upload-artifact@v4
        with: { name: web-dist, path: apps/web/dist, if-no-files-found: warn, retention-days: 7 }
      - uses: actions/upload-artifact@v4
        with: { name: coverage-summary, path: coverage/coverage-summary.json, if-no-files-found: warn, retention-days: 7 }
      - uses: actions/upload-artifact@v4
        with: { name: wf-evidence, path: WF_EVIDENCE.csv, if-no-files-found: error, retention-days: 30 }

  deploy_api:
    runs-on: ubuntu-latest
    needs: build_test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: azure/webapps-deploy@v3
        with:
          app-name: econeura-api-dev
          publish-profile: ${{ secrets.AZURE_API_PUBLISH_PROFILE }}
          package: apps/api_py
