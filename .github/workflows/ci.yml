name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch: {}

permissions:
  contents: read
  security-events: write
  checks: write

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'
  PNPM_VERSION: '8.15.5'
  DEPLOY_ENABLED: 'false'

jobs:
  fast-check:
    name: Fast checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps (fast)
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Install deps (fast)
        run: |
          pnpm install --frozen-lockfile --ignore-scripts || npm ci --no-audit --no-fund

      - name: Typecheck
        run: pnpm run typecheck || echo "Typecheck skipped"

      - name: Lint
        run: pnpm run lint --max-warnings 0 || echo "Lint skipped"

  quality:
    name: Quality & Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: fast-check
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps
        run: pnpm install --frozen-lockfile || npm ci --no-audit --no-fund

      - name: Build
        run: pnpm run build --if-present

      - name: Run tests (strict)
        run: pnpm run test --if-present -- --run || (echo "Tests failed" && exit 1)

  cockpit-integration:
    name: Cockpit Integration
    runs-on: ubuntu-latest
    needs: quality
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Run cockpit CI locally
        run: |
          cd .dev/cockpit
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
            pnpm run build
            pnpm run test:ci
          else
            npm ci --no-audit --no-fund
            npm run build
            npm run test:ci
          fi

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [fast-check, quality]
    if: always()
    steps:
      - name: Print summary
        run: |
          echo "Fast: ${{ needs.fast-check.result }}"
          echo "Quality: ${{ needs.quality.result }}"
          echo "Node: ${{ env.NODE_VERSION }}"
          echo "Deploy Enabled: ${{ env.DEPLOY_ENABLED }}"
