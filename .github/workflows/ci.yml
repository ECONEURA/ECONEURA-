name: ci-debug
on:
  push:
    branches: [ main ]
  pull_request:
permissions:
  contents: read
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
env:
  DEPLOY_ENABLED: "false"
jobs:
  smoke_python_debug:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Ensure routing (10 NEURA)
        run: |
          python - <<'PY'
          import json, os
          p="packages/config/agent-routing.json"
          os.makedirs(os.path.dirname(p), exist_ok=True)
          want=[{"id":f"neura-{i}","url":f"http://localhost:4310/hook/neura-{i}","auth":"header","keyEnv":"MAKE_TOKEN"} for i in range(1,11)]
          try:
            d=json.load(open(p)); ok=isinstance(d,list) and len(d)==10 and sorted(x["id"] for x in d)==[f"neura-{i}" for i in range(1,11)] and all(set(r)=={"id","url","auth","keyEnv"} for r in d)
          except: ok=False
          open(p,"w").write(json.dumps(d if ok else want,indent=2))
          PY
      - name: DEBUG smoke (8080, 1 NEURA, logs completos)
        shell: bash
        run: |
          set -Eeuo pipefail
          export HOST=127.0.0.1 PORT=8080
          echo "# start server" | tee server.log
          python -u apps/api_py/server.py "$PORT" 2>&1 | tee -a server.log & echo $! > .api.pid
          trap 'kill $(cat .api.pid) 2>/dev/null || true' EXIT
          echo "# health probe" | tee curl_health.log
          ok=0
          for i in {1..30}; do
            echo "## attempt $i" | tee -a curl_health.log
            if curl -v --show-error --fail "http://$HOST:$PORT/api/health" | tee health.json; then ok=1; break; fi
            sleep 1
          done
          [ "$ok" = "1" ] || { echo "ERROR: health no respondiÃ³" | tee -a curl_health.log; exit 1; }
          echo "# invoke neura-1 (verbose)" | tee curl_invoke1.log
          curl -v --show-error --fail -XPOST "http://$HOST:$PORT/api/invoke/neura-1" \
            -H "Authorization: Bearer X" -H "X-Route: azure" -H "X-Correlation-Id: cid-1" \
            -H "Content-Type: application/json" -d '{"input":""}' | tee invoke1.json
          {
            echo "## ECONEURA DEBUG summary"
            echo "- Puerto: $PORT"
            echo "- Health body:"; sed 's/^/    /' health.json || true
            echo "- Invoke body:"; sed 's/^/    /' invoke1.json || true
          } >> "$GITHUB_STEP_SUMMARY"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: debug-logs
          path: |
            server.log
            curl_health.log
            curl_invoke1.log
            health.json
            invoke1.json
          if-no-files-found: warn
          retention-days: 7
