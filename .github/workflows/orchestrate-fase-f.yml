name: Orchestrate Fase F (deploy + smoke)

on:
  push:
    branches: [ "fix/azure-ci-20251006171711" ]

permissions:
  contents: read
  actions: read
  issues: write
  workflows: write
  secrets: read

jobs:
  run-deploys-and-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare auth header
        id: auth
        run: |
          if [ -n "${{ secrets.WORKFLOW_DISPATCH_PAT || '' }}" ]; then
            echo "AUTH_HEADER=Authorization: Bearer ${{ secrets.WORKFLOW_DISPATCH_PAT }}" >> $GITHUB_ENV
            echo "USE_PAT=true" >> $GITHUB_ENV
          else
            echo "AUTH_HEADER=Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
            echo "USE_PAT=false" >> $GITHUB_ENV
          fi

      - name: Check publish-profile secrets exist
        run: |
          set -euo pipefail
          if [ -z "${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_WEB }}" ]; then echo "Missing secret AZURE_WEBAPP_PUBLISH_PROFILE_WEB"; exit 2; fi
          if [ -z "${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_API }}" ]; then echo "Missing secret AZURE_WEBAPP_PUBLISH_PROFILE_API"; exit 2; fi

      - name: Dispatch Deploy API
        uses: peter-evans/workflow-dispatch@v1
        with:
          token: ${{ secrets.WORKFLOW_DISPATCH_PAT || secrets.GITHUB_TOKEN }}
          workflow: deploy-api.yml
          ref: fix/azure-ci-20251006171711

      - name: Dispatch Deploy WEB
        uses: peter-evans/workflow-dispatch@v1
        with:
          token: ${{ secrets.WORKFLOW_DISPATCH_PAT || secrets.GITHUB_TOKEN }}
          workflow: deploy-web.yml
          ref: fix/azure-ci-20251006171711

      - name: Wait for Deploy WEB run to appear and complete
        env:
          REPO: ${{ github.repository }}
          AUTH_HEADER: ${{ env.AUTH_HEADER }}
        run: |
          set -euo pipefail
          START=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "start=$START"
          RUN_ID=0
          # poll for run
          for i in $(seq 1 60); do
            sleep 5
            echo "checking for deploy-web run (attempt $i)"
            RESP=$(curl -sS -H "$AUTH_HEADER" "https://api.github.com/repos/$REPO/actions/workflows/deploy-web.yml/runs?per_page=20") || true
            RUN_ID=$(jq -r --arg start "$START" '.workflow_runs[] | select(.head_branch=="fix/azure-ci-20251006171711" and .created_at >= $start) | .id' <(echo "$RESP") | head -n1 || true)
            if [ -n "$RUN_ID" ]; then
              echo "Found deploy-web run id=$RUN_ID"; break
            fi
          done
          if [ -z "$RUN_ID" ]; then echo "deploy-web run not found"; exit 2; fi
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          # wait for completion
          for i in $(seq 1 360); do
            sleep 5
            S=$(curl -sS -H "$AUTH_HEADER" "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID" ) || true
            STATUS=$(echo "$S" | jq -r '.status')
            CONCL=$(echo "$S" | jq -r '.conclusion')
            echo "status=$STATUS conclusion=$CONCL"
            if [ "$STATUS" = "completed" ]; then echo "COMPLETED with $CONCL"; break; fi
          done
          echo "DEPLOY_WEB_CONCLUSION=$CONCL" >> $GITHUB_ENV

      - name: Wait for smoke-test run (triggered by Deploy WEB)
        env:
          REPO: ${{ github.repository }}
          AUTH_HEADER: ${{ env.AUTH_HEADER }}
          START: ${{ env.GITHUB_RUN_STARTED_AT }}
        run: |
          set -euo pipefail
          echo "Looking for smoke-test run created after deploy-web"
          SMOKE_ID=0
          for i in $(seq 1 120); do
            sleep 5
            RESP=$(curl -sS -H "$AUTH_HEADER" "https://api.github.com/repos/$REPO/actions/workflows/smoke-test.yml/runs?per_page=20") || true
            SMOKE_ID=$(echo "$RESP" | jq -r '.workflow_runs[] | .id' | head -n1 || true)
            if [ -n "$SMOKE_ID" ]; then
              echo "Found smoke-test run id=$SMOKE_ID"; break
            fi
          done
          if [ -z "$SMOKE_ID" ]; then echo "smoke-test run not found"; exit 2; fi
          for i in $(seq 1 360); do
            sleep 5
            S=$(curl -sS -H "$AUTH_HEADER" "https://api.github.com/repos/$REPO/actions/runs/$SMOKE_ID" ) || true
            STATUS=$(echo "$S" | jq -r '.status')
            CONCL=$(echo "$S" | jq -r '.conclusion')
            echo "smoke status=$STATUS conclusion=$CONCL"
            if [ "$STATUS" = "completed" ]; then echo "smoke completed with $CONCL"; break; fi
          done
          echo "SMOKE_CONCLUSION=$CONCL" >> $GITHUB_ENV

      - name: Open issue with summary
        env:
          REPO: ${{ github.repository }}
          DEPLOY_WEB_CONCL: ${{ env.DEPLOY_WEB_CONCLUSION }}
          SMOKE_CONCL: ${{ env.SMOKE_CONCLUSION }}
          RUN_ID: ${{ env.RUN_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          BODY=$(cat <<EOF
Orquestador Fase F completado.

Resultados:
- Deploy WEB (run id: $RUN_ID): ${DEPLOY_WEB_CONCL:-unknown}
- Smoke tests: ${SMOKE_CONCL:-unknown}

Revisa Actions runs para mÃ¡s detalles.
EOF
)
          API="https://api.github.com/repos/$REPO/issues"
          curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -d "{\"title\": \"[Fase F] Deploy + smoke summary\", \"body\": $(jq -Rs . <<< "$BODY") }" "$API" > /tmp/issue.json
          jq -r '.html_url' /tmp/issue.json || true
