{"numTotalTestSuites":43,"numPassedTestSuites":43,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":73,"numPassedTests":73,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1759353412139,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["shared smoke test"],"fullName":"shared smoke test should pass basic assertion","status":"passed","title":"should pass basic assertion","duration":3.133000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test"],"fullName":"shared smoke test should import shared modules","status":"passed","title":"should import shared modules","duration":0.2699000000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","minimal.ts"],"fullName":"shared smoke test minimal.ts should create API response","status":"passed","title":"should create API response","duration":0.8736000000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","minimal.ts"],"fullName":"shared smoke test minimal.ts should create API response without message","status":"passed","title":"should create API response without message","duration":0.321899999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","minimal.ts"],"fullName":"shared smoke test minimal.ts should create error response","status":"passed","title":"should create error response","duration":0.3358000000000061,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","minimal.ts"],"fullName":"shared smoke test minimal.ts should validate User interface","status":"passed","title":"should validate User interface","duration":0.31389999999998963,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","minimal.ts"],"fullName":"shared smoke test minimal.ts should validate ApiResponse interface","status":"passed","title":"should validate ApiResponse interface","duration":0.24320000000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","utils/fetch-safe.ts"],"fullName":"shared smoke test utils/fetch-safe.ts should export fetchSafe function","status":"passed","title":"should export fetchSafe function","duration":0.2615999999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","utils/fetch-safe.ts"],"fullName":"shared smoke test utils/fetch-safe.ts should export FetchLike type","status":"passed","title":"should export FetchLike type","duration":0.34319999999996753,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","utils/fetch-safe.ts"],"fullName":"shared smoke test utils/fetch-safe.ts should call fetch with merged headers","status":"passed","title":"should call fetch with merged headers","duration":2.395999999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["shared smoke test","utils/fetch-safe.ts"],"fullName":"shared smoke test utils/fetch-safe.ts should handle empty headers","status":"passed","title":"should handle empty headers","duration":0.4309999999999832,"failureMessages":[],"meta":{}}],"startTime":1759353413340,"endTime":1759353413352.431,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/smoke.shared.test.ts"},{"assertionResults":[{"ancestorTitles":["Config Module"],"fullName":"Config Module should validate required environment variables","status":"passed","title":"should validate required environment variables","duration":4.902600000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Module"],"fullName":"Config Module should validate URL formats","status":"passed","title":"should validate URL formats","duration":4.788699999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Module"],"fullName":"Config Module should validate JWT secret minimum length","status":"passed","title":"should validate JWT secret minimum length","duration":2.319500000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Module"],"fullName":"Config Module should validate numeric transformations","status":"passed","title":"should validate numeric transformations","duration":2.1369999999999436,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Module"],"fullName":"Config Module should validate enum values","status":"passed","title":"should validate enum values","duration":8.453800000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Module"],"fullName":"Config Module should handle default values correctly","status":"passed","title":"should handle default values correctly","duration":3.440399999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Module"],"fullName":"Config Module should validate Azure OpenAI configuration","status":"passed","title":"should validate Azure OpenAI configuration","duration":1.4248999999999796,"failureMessages":[],"meta":{}}],"startTime":1759353413340,"endTime":1759353413368.4248,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/config.test.ts"},{"assertionResults":[{"ancestorTitles":["Errors Module"],"fullName":"Errors Module should be testable","status":"passed","title":"should be testable","duration":2.1328000000000316,"failureMessages":[],"meta":{}},{"ancestorTitles":["Errors Module"],"fullName":"Errors Module should handle basic error logic","status":"passed","title":"should handle basic error logic","duration":0.293200000000013,"failureMessages":[],"meta":{}}],"startTime":1759353413854,"endTime":1759353413857.2932,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/errors.test.ts"},{"assertionResults":[{"ancestorTitles":["HealthChecker","constructor"],"fullName":"HealthChecker constructor should create a new HealthChecker instance","status":"passed","title":"should create a new HealthChecker instance","duration":1.5942000000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","registerService"],"fullName":"HealthChecker registerService should register a service check","status":"passed","title":"should register a service check","duration":5.630400000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","checkHealth"],"fullName":"HealthChecker checkHealth should return healthy status when all services are up","status":"passed","title":"should return healthy status when all services are up","duration":0.9639000000000806,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","checkHealth"],"fullName":"HealthChecker checkHealth should return unhealthy status when any service is down","status":"passed","title":"should return unhealthy status when any service is down","duration":0.4216999999999871,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","checkHealth"],"fullName":"HealthChecker checkHealth should handle service check errors","status":"passed","title":"should handle service check errors","duration":0.4860999999999649,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","checkHealth"],"fullName":"HealthChecker checkHealth should measure response time","status":"passed","title":"should measure response time","duration":11.011799999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","getUptime"],"fullName":"HealthChecker getUptime should return uptime in milliseconds","status":"passed","title":"should return uptime in milliseconds","duration":0.5819000000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","helper functions","createHealthCheck"],"fullName":"HealthChecker helper functions createHealthCheck should return the check function","status":"passed","title":"should return the check function","duration":0.3892999999999347,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","helper functions","databaseHealthCheck"],"fullName":"HealthChecker helper functions databaseHealthCheck should return true for valid connection string","status":"passed","title":"should return true for valid connection string","duration":0.3026999999999589,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","helper functions","databaseHealthCheck"],"fullName":"HealthChecker helper functions databaseHealthCheck should return false for empty connection string","status":"passed","title":"should return false for empty connection string","duration":0.28750000000002274,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","helper functions","redisHealthCheck"],"fullName":"HealthChecker helper functions redisHealthCheck should return true for valid redis URL","status":"passed","title":"should return true for valid redis URL","duration":0.23689999999999145,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","helper functions","redisHealthCheck"],"fullName":"HealthChecker helper functions redisHealthCheck should return false for invalid redis URL","status":"passed","title":"should return false for invalid redis URL","duration":0.21120000000007622,"failureMessages":[],"meta":{}},{"ancestorTitles":["HealthChecker","singleton instance"],"fullName":"HealthChecker singleton instance should export a singleton healthChecker instance","status":"passed","title":"should export a singleton healthChecker instance","duration":0.21249999999997726,"failureMessages":[],"meta":{}}],"startTime":1759353412719,"endTime":1759353412745.2124,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/health.test.ts"},{"assertionResults":[{"ancestorTitles":["Logging Module"],"fullName":"Logging Module should be testable","status":"passed","title":"should be testable","duration":1.3781000000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["Logging Module"],"fullName":"Logging Module should handle log levels","status":"passed","title":"should handle log levels","duration":1.0065999999999917,"failureMessages":[],"meta":{}}],"startTime":1759353413865,"endTime":1759353413868.0066,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/logging.test.ts"},{"assertionResults":[{"ancestorTitles":["Middleware Module","corsMiddleware"],"fullName":"Middleware Module corsMiddleware should set CORS headers for regular requests","status":"passed","title":"should set CORS headers for regular requests","duration":4.467499999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Middleware Module","corsMiddleware"],"fullName":"Middleware Module corsMiddleware should handle OPTIONS requests","status":"passed","title":"should handle OPTIONS requests","duration":1.3717000000000326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Middleware Module","corsMiddleware"],"fullName":"Middleware Module corsMiddleware should use custom origin","status":"passed","title":"should use custom origin","duration":0.6259999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Middleware Module","requestLogger"],"fullName":"Middleware Module requestLogger should log requests","status":"passed","title":"should log requests","duration":26.685799999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Middleware Module","errorHandler"],"fullName":"Middleware Module errorHandler should intercept error status codes and set content type","status":"passed","title":"should intercept error status codes and set content type","duration":0.7190000000000509,"failureMessages":[],"meta":{}},{"ancestorTitles":["Middleware Module","errorHandler"],"fullName":"Middleware Module errorHandler should not set content type for successful responses","status":"passed","title":"should not set content type for successful responses","duration":0.45439999999996417,"failureMessages":[],"meta":{}}],"startTime":1759353412780,"endTime":1759353412815.4543,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/middleware.test.ts"},{"assertionResults":[{"ancestorTitles":["RateLimiter","constructor"],"fullName":"RateLimiter constructor should create with default values","status":"passed","title":"should create with default values","duration":1.7428999999999633,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","constructor"],"fullName":"RateLimiter constructor should create with custom values","status":"passed","title":"should create with custom values","duration":0.3826999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","isAllowed"],"fullName":"RateLimiter isAllowed should allow first request","status":"passed","title":"should allow first request","duration":0.38020000000005894,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","isAllowed"],"fullName":"RateLimiter isAllowed should allow requests within limit","status":"passed","title":"should allow requests within limit","duration":0.3140999999999394,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","isAllowed"],"fullName":"RateLimiter isAllowed should block requests over limit","status":"passed","title":"should block requests over limit","duration":0.31130000000007385,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","isAllowed"],"fullName":"RateLimiter isAllowed should reset after window expires","status":"passed","title":"should reset after window expires","duration":4.163199999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","isAllowed"],"fullName":"RateLimiter isAllowed should handle different keys independently","status":"passed","title":"should handle different keys independently","duration":0.6418999999999642,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","getRemainingRequests"],"fullName":"RateLimiter getRemainingRequests should return max requests for new key","status":"passed","title":"should return max requests for new key","duration":0.35039999999992233,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","getRemainingRequests"],"fullName":"RateLimiter getRemainingRequests should decrease remaining requests","status":"passed","title":"should decrease remaining requests","duration":0.3485000000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","getRemainingRequests"],"fullName":"RateLimiter getRemainingRequests should not go below zero","status":"passed","title":"should not go below zero","duration":0.2899999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","getResetTime"],"fullName":"RateLimiter getResetTime should return future time for new key","status":"passed","title":"should return future time for new key","duration":0.3564999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","getResetTime"],"fullName":"RateLimiter getResetTime should return same reset time for existing key","status":"passed","title":"should return same reset time for existing key","duration":0.27290000000004966,"failureMessages":[],"meta":{}},{"ancestorTitles":["RateLimiter","clear"],"fullName":"RateLimiter clear should clear all entries","status":"passed","title":"should clear all entries","duration":0.4027999999999565,"failureMessages":[],"meta":{}},{"ancestorTitles":["createRateLimitMiddleware"],"fullName":"createRateLimitMiddleware should allow requests within limit","status":"passed","title":"should allow requests within limit","duration":6.165700000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["createRateLimitMiddleware"],"fullName":"createRateLimitMiddleware should block requests over limit","status":"passed","title":"should block requests over limit","duration":3.370400000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["createRateLimitMiddleware"],"fullName":"createRateLimitMiddleware should use custom key function","status":"passed","title":"should use custom key function","duration":3.9569000000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["createRateLimitMiddleware"],"fullName":"createRateLimitMiddleware should use anonymous key by default","status":"passed","title":"should use anonymous key by default","duration":0.48460000000000036,"failureMessages":[],"meta":{}}],"startTime":1759353412719,"endTime":1759353412744.4846,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/rate-limiter.test.ts"},{"assertionResults":[{"ancestorTitles":["Retry Module","withRetry"],"fullName":"Retry Module withRetry should return result on first attempt","status":"passed","title":"should return result on first attempt","duration":2.7819999999999823,"failureMessages":[],"meta":{}},{"ancestorTitles":["Retry Module","withRetry"],"fullName":"Retry Module withRetry should retry on failure and succeed","status":"passed","title":"should retry on failure and succeed","duration":10.504099999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Retry Module","withRetry"],"fullName":"Retry Module withRetry should fail after max attempts","status":"passed","title":"should fail after max attempts","duration":11.51219999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Retry Module","withRetry"],"fullName":"Retry Module withRetry should use custom retry condition","status":"passed","title":"should use custom retry condition","duration":3.4548000000000343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Retry Module","withRetry"],"fullName":"Retry Module withRetry should not retry when condition returns false","status":"passed","title":"should not retry when condition returns false","duration":0.671100000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Retry Module","defaultRetryOptions"],"fullName":"Retry Module defaultRetryOptions should have sensible defaults","status":"passed","title":"should have sensible defaults","duration":0.3331999999999766,"failureMessages":[],"meta":{}},{"ancestorTitles":["Retry Module","defaultRetryOptions"],"fullName":"Retry Module defaultRetryOptions should retry on network errors","status":"passed","title":"should retry on network errors","duration":0.3702000000000112,"failureMessages":[],"meta":{}}],"startTime":1759353413858,"endTime":1759353413888.37,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/retry.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Module","validateEmail"],"fullName":"Validation Module validateEmail should validate correct email addresses","status":"passed","title":"should validate correct email addresses","duration":2.27819999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateEmail"],"fullName":"Validation Module validateEmail should reject invalid email addresses","status":"passed","title":"should reject invalid email addresses","duration":1.1862999999999602,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateUUID"],"fullName":"Validation Module validateUUID should validate correct UUID v4 format","status":"passed","title":"should validate correct UUID v4 format","duration":0.37639999999998963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateUUID"],"fullName":"Validation Module validateUUID should reject invalid UUID formats","status":"passed","title":"should reject invalid UUID formats","duration":0.7615000000000691,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateData"],"fullName":"Validation Module validateData should validate data against Zod schema successfully","status":"passed","title":"should validate data against Zod schema successfully","duration":3.451999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateData"],"fullName":"Validation Module validateData should return errors for invalid data","status":"passed","title":"should return errors for invalid data","duration":1.3134999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateData"],"fullName":"Validation Module validateData should handle simple schemas","status":"passed","title":"should handle simple schemas","duration":0.6502000000000407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Module","validateData"],"fullName":"Validation Module validateData should validate with custom error messages","status":"passed","title":"should validate with custom error messages","duration":3.148400000000038,"failureMessages":[],"meta":{}}],"startTime":1759353413379,"endTime":1759353413393.1484,"status":"passed","message":"","name":"C:/Users/Usuario/ECONEURA-/ECONEURA-/packages/shared/src/__tests__/validation.test.ts"}]}